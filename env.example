# GraphMCP Framework Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# GITHUB MCP SERVER CONFIGURATION
# =============================================================================

# GitHub Personal Access Token (required for GitHub MCP server)
# Create at: https://github.com/settings/personal-access-tokens/new
# Required scopes: repo, read:org, read:user
GITHUB_PERSONAL_ACCESS_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# GitHub repository information for testing
GITHUB_TEST_OWNER=bprzybys-nc
GITHUB_TEST_REPO=postgres-sample-dbs
GITHUB_DEFAULT_BRANCH=main

# =============================================================================
# SLACK MCP SERVER CONFIGURATION  
# =============================================================================

# Slack Bot Token (required for Slack MCP server)
# Create at: https://api.slack.com/apps -> Your App -> OAuth & Permissions
# Required scopes: chat:write, channels:read, reactions:write, channels:history
SLACK_BOT_TOKEN=xoxb-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxx

# Slack Team/Workspace ID
# Find at: https://api.slack.com/methods/auth.test (after auth)
SLACK_TEAM_ID=T01234567890

# Slack Channel IDs for testing (comma-separated)
# Find by right-clicking channel -> View channel details -> Copy ID
SLACK_CHANNEL_IDS=C01234567890,C09876543210

# Default test channel for notifications
SLACK_TEST_CHANNEL=C01234567890

# =============================================================================
# REPOMIX MCP SERVER CONFIGURATION
# =============================================================================

# Repomix doesn't require additional environment variables
# but you may want to configure these for advanced usage:

# Maximum file size for processing (in bytes)
REPOMIX_MAX_FILE_SIZE=1048576

# Default patterns to include
REPOMIX_INCLUDE_PATTERNS="**/*.py,**/*.js,**/*.ts,**/*.yaml,**/*.yml,**/*.md"

# Default patterns to exclude  
REPOMIX_EXCLUDE_PATTERNS="node_modules/**,dist/**,build/**,**/.git/**,**/.env"

# =============================================================================
# OPENAI/GPT CONFIGURATION (Optional)
# =============================================================================

# OpenAI API Key for GPT steps in workflows
# Create at: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Default model for GPT steps
OPENAI_DEFAULT_MODEL=gpt-4o-mini

# =============================================================================
# DATABASE DECOMMISSIONING WORKFLOW CONFIGURATION
# =============================================================================

# Target database name for decommissioning
TARGET_DATABASE_NAME=periodic_table

# Repository URLs to process (comma-separated)
TARGET_REPO_URLS=https://github.com/bprzybys-nc/postgres-sample-dbs

# Branch to create for decommissioning changes
DECOMMISSION_BRANCH_PREFIX=feat/db-decommission

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================

# Enable E2E tests (set to 'true' to run real integration tests)
E2E_TESTS_ENABLED=false

# Test timeout for long-running operations (seconds)
TEST_TIMEOUT=300

# Test data directory for fixtures
TEST_DATA_DIR=tests/fixtures

# =============================================================================
# MCP CONFIGURATION
# =============================================================================

# Path to MCP configuration file
MCP_CONFIG_PATH=mcp_config.json

# Default timeout for MCP operations (seconds)
MCP_TIMEOUT=120

# Default retry count for failed MCP operations
MCP_RETRY_COUNT=3

# Enable debug logging for MCP operations
MCP_DEBUG=false

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log format for console output
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# Enable structured logging (JSON format)
STRUCTURED_LOGGING=false

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Development mode (enables additional debugging)
DEV_MODE=true

# Auto-reload on code changes
AUTO_RELOAD=true

# Enable performance profiling
ENABLE_PROFILING=false 